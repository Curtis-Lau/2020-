import pandas as pd
from q4LP import linear_programming
import numpy as np

# times_list=[3.879200634842187, 4.3389249107155345, 4.017446419272968, 2.4712231872914754, 2.4270126521420187e-11, 4.239140618459672, 2.0371450558473967, 2.524134919280675, 3.0783258837269947, 1.2968103065959014, 5.4425543561808745, 6.007885924995197, 3.41144316732769, 1.6997323251845398, 5.148931411204117e-08, 3.971178405885392e-10, 1.0411178690004778e-08, 3.7572847865712074e-09, 0.9753709711301165, 2.3918856289551456, 0.24327250277818488, 2.1354277152257883, 2.5857941541207943, 1.9708573342937994, 3.0409306169104346, 2.2098650134052114, 1.5022494261935901, 3.7560162692259293, 4.7282505943036, 2.957262244027019, 0.8775823859585885, 0.3966704627787904, 0.5867666014380957, 1.1095112276064135e-07, 1.33603891503758, 0.9895312843458305, 3.3407653568519846, 0.4289555427173499, 1.7666564592577845, 0.9193086489056329, 1.9332951213234546e-07, 1.8800844235117673, 0.308285289879873, 0.8645306730658605, 3.1108998180705596, 2.7875835469354238, 7.437051121573357e-08, 2.645857391046634, 2.0176226946301843, 1.8202047641245334, 3.5615603823531807, 5.292175363371792, 4.427548289812322, 4.4533681928936355, 1.8748265572057508, 3.482008997357938, 2.651387601239019, 1.0765524524351857e-07, 0.7899619928811071, 1.5077898869298214, 2.255697399654277, 0.5165689400103578, 0.4446547639969342, 1.0807874194792435, 0.07994681155797048, 2.197047759679337, 3.5226445892979044, 0.8949863321172149, 1.842625032908843e-07, 4.912102679251349, 7.22241785928855, 9.638703223210577, 2.159649212244357, 0.5262244365527252, 1.4917438497849094, 2.4188374145417453, 5.157952934345176, 2.966498887014998, 1.374292641135474, 2.3746685841547478e-11, 0.6225850809489111, 1.4338121089791077e-07, 0.4822940467691033, 1.8702652559371544, 4.433506707398846, 2.09454556031396e-07, 3.85322930409598, 1.453264180550179, 1.9936353130618312, 2.8480048234907422, 1.104984331034627e-08, 1.9804946467177906, 4.880552008876023, 4.404323727530694, 3.6116068356081543, 3.4940424317389014, 3.8024778054397683, 3.3064911276452427, 2.5236460306138637, 3.0617093303052902, 3.755138166014791, 4.663282690137952, 3.1710454423891905, 3.4857760698735163, 2.2219482432857944, 1.669628050742221, 1.152562165661418, 1.9893584570049837e-08, 3.019824680981467, 0.9950906317840937, 0.874069648244311, 2.418988264302703, 0.30300508810563886, 2.574294923158606, 3.138327089366983, 4.611317135047475, 4.885633397476543, 2.696312616782856, 4.058873947503845, 5.691092726003417, 1.5707576698221049, 2.263009403037786, 3.415346434939344, 0.8343295831757224, 1.571230505378242, 2.9007972444551946, 2.7564255863014058, 1.6458302569783578, 2.5216101606822074, 0.8114881577440544, 4.479251026362064e-08, 0.5062219868857532, 1.7504429103976795, 0.9250976355098165, 1.9581764854021189, 3.5216440041651347e-10, 2.3892673539327514, 2.378760273250905, 0.9310056007657824, 2.9183445247896377e-07, 2.1268776433861135e-11, 5.428641826835714, 0.804952680605621, 6.641353374373483e-09, 1.0264277140654154, 1.086405616821737, 0.5029938084068811, 2.868337436232758e-07, 1.668810783221368e-07, 2.8489666896639315e-11, 6.847882270741241e-09, 0.156773375112736, 1.1787580462792534e-07, 6.690208193764068, 1.4151280663522305e-08, 8.742709883698268e-09, 0.8556554835382056, 2.873671693364371e-11, 1.1744554449495091e-07, 6.77015478529301e-08, 3.178195646245976, 3.74372650728923, 3.9632902863889345, 0.8814967403310187, 2.4765420488982786, 1.288900907842029, 3.3662452897934054, 1.4610067227424368, 0.42801431493960124, 9.171925543033819e-09, 1.127893539234255, 0.04414831686851194, 1.391318981420323, 1.3426103822713937, 3.139808924974395, 1.437420053849122, 1.7846456396762267, 0.6664863286545922, 2.6099047219004485, 4.057242531877054e-09, 0.6108533720982076, 4.625264395879636e-11, 2.0599515456411846e-10, 1.214584535665964, 1.7704319795158154, 3.5766237042835085, 0.035236658126884764, 1.2230265370429905, 1.9913931996797693e-07, 1.0212659045949334e-07, 1.6853172069230982e-11, 0.8900063443485418, 2.202012565484895, 2.831373417122762, 4.547707938682721, 2.8614685823697483, 1.275976412684872e-07, 0.8428228293651946, 0.21256010233022216, 1.660873672855731, 2.1070148412597365, 2.475530562467196, 1.9294920604295667, 2.178796666509928, 2.247053716661779e-07, 1.8250962009101186e-09, 0.3041830080658644, 7.213965699562214e-11, 3.4572882129349657e-10, 3.083254785939434, 1.8891534371398504, 0.48623126211675893, 1.0182803238885063, 1.4049447994220454, 1.565430930594267, 0.760387912369719, 1.2457461707477249, 3.396946043058482e-11, 0.47694360324377594, 0.7829631987907042, 3.7007838648821236, 1.5693748236754825, 2.164613076748674, 3.223122935268185, 2.6085521826132347, 2.1883626764951796, 3.6025896963021995, 4.965499256042774, 5.08161058582183, 4.522638016448479, 4.46132229282815e-09, 2.2079945161352406, 1.225018921277216, 1.1151000161831137, 0.23868357789759542, 5.4715788292671016e-08, 1.2789344937633312e-07, 2.613696917204101e-07, 0.21774182335782344, 5.163899668322072e-08, 1.457295136565895e-07, 0.6929845949072077, 1.0279040757366564e-09, 4.025943009060683, 6.924740818687101, 4.772150438783401, 2.796016128891322, 2.9460421687561347, 3.157054039719714, 2.640105670863301, 2.49451887514771, 2.3989276779171593, 2.5652956936441473, 2.644959689879058, 3.7462814732231977, 3.905511712183351, 2.653919270601017, 1.5131858628395116, 1.7576685000842303, 1.2483702469801383e-07, 2.5031477701727266e-11, 2.2289052621834049e-07, 1.9157507309832866, 0.8975410139730133, 6.810653705907297e-11, 2.947868617238153e-11, 2.2890859148013626e-07, 1.3004203148266446e-11, 0.2392707054537346, 1.4631483966669523, 7.667002953770257e-11, 9.297636714974829e-10, 2.817486809366423e-11, 1.5278871181957332e-07, 1.2582727189077483e-10, 0.4644746252038807, 1.6446869733937942e-11, 3.957844408350987e-11, 0.0142030567197186, 0.1459905326362932, 1.485667715761964, 0.357735721292064, 1.5294144338484382e-09, 3.2097575729834147e-11, 4.294287740805042, 0.7883520384441218, 3.5794322457798655, 1.9741259995340743, 4.09042435406797, 3.89762182155176, 3.8313960240443565, 2.9817360376044957, 2.0132795939340387, 2.6275595707956514, 1.7899482344147282, 1.9129099751093341, 1.6763503085923612, 3.118278189067222, 2.2421718443355196, 3.4242639877110705, 1.4033493709135871, 4.514292415900562, 4.436454061255649, 2.901378476894191, 4.144928321234494, 8.069220822437442, 6.400928852200706, 4.891819397118463, 5.980439004051598, 5.31780909016308, 2.8279188659495245, 4.8256562524145385, 6.127767961845074, 1.9088163829616431e-07, 6.041579168231627, 1.8207033310358052, 1.8394550184434235, 1.8333160679448903, 2.5617762891138853, 2.4338988304202647, 0.7040770180419086, 0.9359598226009858, 1.3139786276321659, 1.726706093129688, 2.9045811124593235]
df_material = pd.read_excel("q1data.xlsx")
s_material_RON = list(df_material['辛烷值RON'])

df = pd.read_excel("q4data.xlsx",index_col='样本编号')
df.drop('S-ZORB.FT_5104.PV',axis=1,inplace=True)
s_product_RON = list(df['辛烷值RON.1'])
s_data = df.iloc[:,1:-1]

l4=40;u4=800;      l5=250;u5=600;     l6=0;u6=90
l7=5;u7=15;        l8=200;u8=350;     l9=250;u9=350
l10=235;u10=1000;  l11=-5;u11=35;     l12=-0.5;u12=12
l13=0;u13=2.5;     l14=120;u14=350;   l15=500;u15=3800
l16=5;u16=150
l_list=[l4,l5,l6,l7,l8,l9,l10,l11,l12,l13,l14,l15,l16]
u_list=[u4,u5,u6,u7,u8,u9,u10,u11,u12,u13,u14,u15,u16]
col_list = list(s_data.columns)[3:]
for i in range(len(col_list)):
    mean_ =  s_data[col_list[i]][(s_data[col_list[i]]>l_list[i]) & (s_data[col_list[i]]<u_list[i])].mean()
    idx = s_data[col_list[i]][(s_data[col_list[i]]<l_list[i]) | (s_data[col_list[i]]>u_list[i])].index
    for j in idx:
        s_data.loc[j,col_list[i]] = mean_

for i in range(len(col_list)):
    mean_1 =  s_data[col_list[i]][s_data[col_list[i]]!=0].mean()
    s_data[col_list[i]][s_data[col_list[i]] == 0] = mean_1
# s_data.to_excel('标准数据.xlsx')
col = ['硫含量,μg/g','饱和烃,v%（烷烃+环烷烃）','S-ZORB.LC_5101.PV',
       'S-ZORB.FT_9202.PV','S-ZORB.FC_1203.PV','S-ZORB.FT_3201.DACA',
       'S-ZORB.LT_9101.DACA','S-ZORB.PDT_1002.DACA','S-ZORB.PT_7103B.DACA',
       'S-ZORB.SIS_FT_3202.PV','S-ZORB.FC_5001.DACA','S-ZORB.TE_1101.DACA.PV']
s_data = s_data.loc[:,col]
x_p_list=[];  y_list=[];  s_list=[]
times_list=np.random.uniform(4.5,6.5,s_data.shape[0])
for i in range(s_data.shape[0]):
    x_list,y,s = linear_programming(s_material_RON[i],s_product_RON[i],
                                  s_data.iloc[i,0],s_data.iloc[i,1],s_data.iloc[i,2],s_data.iloc[i,3],
                                  s_data.iloc[i,4],s_data.iloc[i,5],s_data.iloc[i,6],s_data.iloc[i,7],
                                  s_data.iloc[i,8],s_data.iloc[i,9],s_data.iloc[i,10],s_data.iloc[i,11],
                                  times=times_list[i])

    x_p_list.append(x_list)
    y_list.append(y)
    s_list.append(s)

df_1 = pd.DataFrame({'样本编号':list(df.index),'辛烷值(原料)':s_material_RON,'辛烷值(产品)':s_product_RON,
                     '辛烷值(优化)':y_list,'硫含量(产品)':s_list,'自变量':x_p_list}).set_index('样本编号')
df_1['损失降幅'] = (df_1['辛烷值(优化)']-df_1['辛烷值(产品)'])/(df_1['辛烷值(原料)']-df_1['辛烷值(产品)'])
# df_1.to_excel("q4result.xlsx")